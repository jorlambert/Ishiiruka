name: PR Builds x64

on:
  push:
    branches:
        - Dev
    paths-ignore:
        - "**.md"
        - "**.ini"
  pull_request:
    branches: [ Dev ]
    paths-ignore:
      - "**.md"
      - "**.ini"

jobs:
  macOS:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Netplay]
        include:
          - build_type: Netplay
            artifact_name: macOS-netplay
            build_config: netplay
    name: "macOS ${{ matrix.build_type }}"
    runs-on: macos-10.15
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: 'Fetch Git Tags'
        if: success()
        run: |
          git fetch --prune --unshallow
          echo "GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "GIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "CURR_DATE=$(date +%Y-%m-%d)" >> $GITHUB_ENV
      - name: "Install 10.14 SDK"
        if: success()
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
          wget https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.14.sdk.tar.xz
          tar -xf MacOSX10.14.sdk.tar.xz
          rm MacOSX10.14.sdk.tar.xz
          sudo mv MacOSX10.14.sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/
      - name: "Download and Install prerequisites"
        if: success()
        shell: bash
        run: |
          rm '/usr/local/bin/2to3' || true
          echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $GITHUB_ENV
          brew upgrade cmake
          brew install \
          ffmpeg \
          libpng \
          libav \
          pkgconfig \
          libao \
          sound-touch \
          hidapi
      - name: "Build ${{ matrix.build_type }} Dolphin"
        if: success()
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
          export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/lib
          chmod +x ./build-mac.sh && ./build-mac.sh ${{ matrix.build_config }}
          mkdir artifact
          FILE_NAME=${{ env.CURR_DATE }}-${{ env.GIT_HASH }}-${{ env.GIT_TAG }}-${{ matrix.artifact_name }}
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
      - name: "Package ${{ matrix.build_type }}"
        if: success()
        shell: bash
        working-directory: ${{ github.workspace }}
        run: |
          cd  ./build/Binaries
          zip -r "${{ env.FILE_NAME }}.zip" Dolphin.app
          mv "${{ env.FILE_NAME }}.zip" ../../artifact/
      - name: "Publish"
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: ${{ matrix.artifact_name }}
          path: "./artifact/"
      - name: "Publish"
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: ${{ matrix.artifact_name }}
          path: "./artifact/"