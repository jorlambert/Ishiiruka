name: PR Builds x64

on:
  push:
    branches:
        - Dev
    paths-ignore:
        - "**.md"
        - "**.ini"
  pull_request:
    branches: [ Dev ]
    paths-ignore:
      - "**.md"
      - "**.ini"

jobs:
  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - artifact_name: windows
    name: "Windows Dolphin"
    runs-on: windows-2019
    steps:
      - name: "Build Dolphin"
        run: |
          mkdir -p ${{ github.workspace }}/Binary/x64/
      - name: "Build Netplay Updater"
        working-directory: ${{ github.workspace }}
        shell: cmd
        run: |
          git clone https://github.com/Birdthulu/FPM-Win-Updater
          cd FPM-Win-Updater
          msbuild /p:Configuration=Release /p:Platform=x64 ${{ github.workspace }}\FPM-Win-Updater\DolphinUpdater.sln
          cd DolphinUpdater\bin\Release
          copy /b /v /y Updater.exe ${{ github.workspace }}\Binary\x64\
      - name: "Prepare Artifact"
        working-directory: ${{ github.workspace }}
        run: |
          cd .\Binary\x64\
      - name: Package Artifact
        working-directory: ${{ github.workspace }}
        run: |
          $FILE_NAME="${{ env.CURR_DATE }}-${{ env.GIT_HASH }}-${{ env.GIT_TAG }}-${{ matrix.artifact_name }}.zip"
          mkdir artifact
          cd .\Binary\x64\
          fsutil file createnew portable.txt 0
          7z a $FILE_NAME .\*
          move $FILE_NAME ..\..\artifact\
      - name: "Publish"
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: ${{ matrix.artifact_name }}
          path: "./artifact/"